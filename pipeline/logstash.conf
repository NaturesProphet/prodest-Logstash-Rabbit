###########################################################################################
# ETAPA DE ENTRADA
# Utilizando o input-plugin 'jms' para ler o topico na Geocontrol
###########################################################################################
input 
{
	jms 
	{
		yaml_file => "/usr/share/logstash/activemq/jms.yml"
		yaml_section => "activemq"
		destination => "DadosRastreioPRODEST"
		runner => "async"
		pub_sub => true
	}
}
# -----------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------


###########################################################################################
# ETAPA DE TRANSFORMAÇÃO (filter)
# Esta etapa utiliza os filter-plugins 'json_encode' para remover campos desnecessários,
# gerar a chave 'LOCALIZACAO' que será indexada no mongo e o 'mutate' para corrigir o 
# campo 'LONGITUDE' (chega como string, mas deveria ser float) e o array LOCALIZACAO que é
# gerado como string mas deve ser um float
###########################################################################################

filter 
{ 
# -----------------------------------
	json_encode 
	{
		source => "LONGITUDE"
		add_field => 
		{
      		"LOCALIZACAO" => [ "%{LONGITUDE}", "%{LATITUDE}" ]
    	}
		remove_field => 
		[ 
			"jms_reply_to", 
			"jms_correlation_id", 
			"jms_type", 
			"jms_delivery_mode_sym",
			"ED1_ACIONADA",
			"ED2_ACIONADA",
			"ED3_ACIONADA",
			"ED4_ACIONADA",
			"jms_expiration",
			"@version",
			"jms_redelivered",
			"jms_timestamp",
			"jms_priority",
			"jms_message_id",
			"MESSAGE_TYPE",
			"jms_destination",
			"IDENTIFIER",
			"MESSAGE_SUB_TYPE"
		]
  }
# -----------------------------------
	mutate 
	{
    	convert => 
		{
			"LONGITUDE" => "float"
			"LOCALIZACAO" => "float"
    	}
  	}
}
# -----------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------


###########################################################################################
# ETAPA DE SAÍDA
###########################################################################################
output 
{
	rabbitmq 
	{
		durable => false
		persistent => false
		passive => true
		exchange => "${RABBIT_EXCHANGE_NAME}"
		exchange_type => "${RABBIT_EXCHANGE_TYPE}"
		host => "${RABBIT_HOST}"
  	}
	# stdout {}
}
# -----------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------

